#!/bin/bash

TARGET_DBNAME=""
BACKUP_DBPATH=""
DB_USER=""

help_text="help: db-copy -h

Create a copy of the database for loading a new site. It will drop the current copy and create a new copy. You do not have to 
provide the source database name as the backup file will be having it.

How to use: db-copy -d {TARGET_DBNAME} -c {CURRENT_DBNAME_COPY} -f {BACKUP_DBPATH}

End of help command"

while getopts ':h:d:f:s:' option; do
  case "$option" in
    h) echo "$help_text"
       exit
       ;;
    d) TARGET_DBNAME="$OPTARG"
       ;;
    f) BACKUP_DBPATH="$OPTARG"
       ;;
    c) CURRENT_DBNAME_COPY="$OPTARG"
       ;;
    :) printf "missing argument for -%s\n" "$OPTARG" >&2
       echo "$help_text" >&2
       exit 1
       ;;
   \?) printf "illegal option: -%s\n" "$OPTARG" >&2
       echo "$help_text" >&2
       exit 1
       ;;
  esac
done

echo "Dropping the database $CURRENT_DBNAME_COPY"
drop_command="DROP DATABASE IF EXISTS $CURRENT_DBNAME_COPY;"

echo "Creating database $TARGET_DBNAME if doesn't exist"
command="CREATE DATABASE IF NOT EXISTS $TARGET_DBNAME;"
mysql --execute="$drop_command$command"

echo "Taking backup of database using file $BACKUP_DBPATH"
pv $BACKUP_DBPATH | mysql "$TARGET_DBNAME" --defaults-extra-file=./mysql-config.cnf
